name: Create Issue


on: 
  issues:
    types: [opened]

concurrency: 
  group: create-issue-${{ github.ref }}
  cancel-in-progress: true

env:
  COLUMN_ID: ${{ secrets.PROJECT_ID }}
  LABEL_NAME: test-copy

jobs:
  create-issue:
    if: contains(github.event.issue.labels.*.name, 'test-copy')
    runs-on: ubuntu-latest
    steps:
      - name: Filter labels
        id: filter_labels
        run: |
          LABELS=$(echo '${{ toJson(github.event.issue.labels) }}' | jq -r '[.[] | select(.name != "test-copy") | .name] | join(",")')
          echo "labels=$LABELS" >> $GITHUB_OUTPUT
      - name: Create Issue
        id: create_issue
        uses: dacbd/create-issue-action@main
        with:
          token: ${{ secrets.GH_TOKEN }}
          title: ${{ github.event.issue.title }}
          body: ${{ github.event.issue.body }}
          owner: arturshadnik
          repo: gsc
          assignees: ${{ join(github.event.issue.assignees.*.login, ',') }}
          labels: ${{ steps.filter_labels.outputs.labels }}
      - name: Get Issue ID
        id: get_issue_id
        run: |
          ISSUE_ID=$(echo '${{ steps.create_issue.outputs.json }}' | jq -r .node_id)
          echo "issue_id=$ISSUE_ID" >> $GITHUB_OUTPUT
      - name: Create Project Card
        id: create_project_card
        run: |
          curl --request POST \
            --url https://api.github.com/graphql \
            --header 'Authorization: Bearer ${{ secrets.GH_TOKEN }}' \
            --data '{"query":"mutation {addProjectV2ItemById(input: {projectId: \"${{ env.COLUMN_ID }}\" contentId: \"${{ steps.get_issue_id.outputs.issue_id }}\"}) {item {id}}}"}' 
