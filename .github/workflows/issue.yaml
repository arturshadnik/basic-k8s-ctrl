name: Create Issue


on: 
  issues:
    types: [opened]

concurrency: 
  group: create-issue-${{ github.ref }}
  cancel-in-progress: true

env:
  COLUMN_ID: ${{ secrets.PROJECT_ID }}
  LABEL_NAME: test-copy

jobs:
  create-issue:
    if: contains(github.event.issue.labels.*.name, 'test-copy')
    runs-on: ubuntu-latest
    steps:
      - name: Filter labels
        id: filter_labels
        run: |
          LABELS=$(cat <<EOF | jq -r --arg label_name "${{ env.LABEL_NAME }}" '[.[] | select(.name != $label_name) | .name] | join(",")' \
            ${{ toJson(github.event.issue.labels) }} \
            EOF \
          )   
          echo "labels=$LABELS" >> $GITHUB_OUTPUT
      - name: Create Issue
        id: create_issue
        uses: dacbd/create-issue-action@main
        with:
          token: ${{ secrets.GH_TOKEN }}
          title: ${{ github.event.issue.title }}
          body: ${{ github.event.issue.body }}
          owner: arturshadnik
          repo: gsc
          assignees: ${{ join(github.event.issue.assignees.*.login, ',') }}
          labels: ${{ steps.filter_labels.outputs.labels }}
      - name: Get Issue ID
        id: get_issue_id
        run: |
          ISSUE_ID=$(echo '${{ steps.create_issue.outputs.json }}' | jq -r .node_id)
          echo "issue_id=$ISSUE_ID" >> $GITHUB_OUTPUT
      - name: Create Project Card
        id: create_project_card
        run: |
          curl --request POST \
            --url https://api.github.com/graphql \
            --header 'Authorization: Bearer ${{ secrets.GH_TOKEN }}' \
            --data '{"query":"mutation {addProjectV2ItemById(input: {projectId: \"${{ env.COLUMN_ID }}\" contentId: \"${{ steps.get_issue_id.outputs.issue_id }}\"}) {item {id}}}"}' 
      # - name: Get Card ID
      #   id: get_card_id
      #   run: |
      #     CARD_ID=$(echo '${{ steps.create_project_card.outputs.json }}' | jq -r .data.addProjectV2ItemById.item.id)
      #     echo "card_id=$CARD_ID" >> $GITHUB_OUTPUT
      # - name: Move Card
      #   id: move_card
      #   run: |
      #     curl -L \
      #     -X POST \
      #     -H "Accept: application/vnd.github+json" \
      #     -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
      #     -H "X-GitHub-Api-Version: 2022-11-28" \
      #     -d '{"card_id":"'${{ steps.get_card_id.outputs.card_id }}'","position":"after: "}' \
      #     https://api.github.com/projects/columns/${{ env.COLUMN_ID }}/cards/${{ steps.get_card_id.outputs.card_id }}/moves